-- MySQL Script generated by MySQL Workbench
-- Mon 17 Mar 2025 10:04:37 AM CET
-- Model: Univ6    Version: 2.3

-- mySQL ü´£

-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pear
-- -----------------------------------------------------
-- Pear is not üçè

-- -----------------------------------------------------
-- Schema pear
--
-- Pear is not üçè
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pear` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ;
USE `pear` ;

-- -----------------------------------------------------
-- Table `pear`.`SalesTerritory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`SalesTerritory` (
  `SalesTerritoryKey` TINYINT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`SalesTerritoryKey`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`Country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`Country` (
  `CountryKey` SMALLINT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Code` VARCHAR(45) NOT NULL,
  `SalesTerritory_SalesTerritoryKey` TINYINT NOT NULL,
  PRIMARY KEY (`CountryKey`, `SalesTerritory_SalesTerritoryKey`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC),
  UNIQUE INDEX `Code_UNIQUE` (`Code` ASC),
  INDEX `fk_Country_SalesTerritory1_idx` (`SalesTerritory_SalesTerritoryKey` ASC),
  CONSTRAINT `fk_Country_SalesTerritory1`
    FOREIGN KEY (`SalesTerritory_SalesTerritoryKey`)
    REFERENCES `pear`.`SalesTerritory` (`SalesTerritoryKey`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`City`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`City` (
  `CityKey` SMALLINT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `PostalCode` VARCHAR(45) NOT NULL,
  `Country_CountryKey` SMALLINT NOT NULL,
  PRIMARY KEY (`CityKey`, `Country_CountryKey`),
  UNIQUE INDEX `PostalCode_UNIQUE` (`PostalCode` ASC),
  INDEX `fk_City_Country1_idx` (`Country_CountryKey` ASC),
  CONSTRAINT `fk_City_Country1`
    FOREIGN KEY (`Country_CountryKey`)
    REFERENCES `pear`.`Country` (`CountryKey`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`Customer` (
  `CustomerKey` INT NOT NULL AUTO_INCREMENT,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `FirstName` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NOT NULL,
  `PhoneNumber` VARCHAR(45) NULL,
  `Birthday` DATE NULL,
  `Address` VARCHAR(45) NOT NULL,
  `CreationDate` DATE NOT NULL,
  `ModificationTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Country_CountryKey` SMALLINT NOT NULL,
  PRIMARY KEY (`CustomerKey`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC),
  INDEX `fk_Customer_Country1_idx` (`Country_CountryKey` ASC),
  CONSTRAINT `fk_Customer_Country1`
    FOREIGN KEY (`Country_CountryKey`)
    REFERENCES `pear`.`Country` (`CountryKey`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`Administrator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`Administrator` (
  `AdministratorKey` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `PhoneNumber` VARCHAR(45) NOT NULL,
  `City_CityKey` SMALLINT NOT NULL,
  PRIMARY KEY (`AdministratorKey`, `City_CityKey`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC),
  UNIQUE INDEX `PhoneNumber_UNIQUE` (`PhoneNumber` ASC),
  INDEX `fk_Administrator_City1_idx` (`City_CityKey` ASC),
  CONSTRAINT `fk_Administrator_City1`
    FOREIGN KEY (`City_CityKey`)
    REFERENCES `pear`.`City` (`CityKey`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`Product` (
  `ProductKey` INT NOT NULL AUTO_INCREMENT,
  `Code` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Price` DECIMAL(10,2) UNSIGNED NOT NULL,
  `Status` ENUM('live', 'out_of_stock', 'planned', 'archived') NOT NULL DEFAULT 'planned',
  `Category` ENUM('phone', 'laptop', 'watch') NOT NULL,
  PRIMARY KEY (`ProductKey`),
  UNIQUE INDEX `Code_UNIQUE` (`Code` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`Question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`Question` (
  `QuestionKey` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(45) NOT NULL,
  `Body` VARCHAR(45) NOT NULL,
  `CreationTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Customer_CustomerKey` INT NOT NULL,
  `Product_ProductKey` INT NOT NULL,
  PRIMARY KEY (`QuestionKey`, `Product_ProductKey`),
  INDEX `fk_Question_Customer1_idx` (`Customer_CustomerKey` ASC),
  INDEX `fk_Question_Product1_idx` (`Product_ProductKey` ASC),
  CONSTRAINT `fk_Question_Customer1`
    FOREIGN KEY (`Customer_CustomerKey`)
    REFERENCES `pear`.`Customer` (`CustomerKey`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Question_Product1`
    FOREIGN KEY (`Product_ProductKey`)
    REFERENCES `pear`.`Product` (`ProductKey`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`SalesPoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`SalesPoint` (
  `SalesPointKey` INT NOT NULL AUTO_INCREMENT,
  `Address` VARCHAR(45) NOT NULL,
  `ContactNumber` VARCHAR(45) NOT NULL,
  `ModificationTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `City_CityKey` SMALLINT NULL,
  PRIMARY KEY (`SalesPointKey`),
  UNIQUE INDEX `Address_UNIQUE` (`Address` ASC),
  INDEX `fk_SalesPoint_City1_idx` (`City_CityKey` ASC),
  CONSTRAINT `fk_SalesPoint_City1`
    FOREIGN KEY (`City_CityKey`)
    REFERENCES `pear`.`City` (`CityKey`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`Employee` (
  `EmployeeKey` INT NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `PhoneNumber` VARCHAR(45) NOT NULL,
  `SalesPoint_SalesPointKey` INT NOT NULL,
  PRIMARY KEY (`EmployeeKey`, `SalesPoint_SalesPointKey`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC),
  UNIQUE INDEX `PhoneNumber_UNIQUE` (`PhoneNumber` ASC),
  INDEX `fk_Employee_SalesPoint1_idx` (`SalesPoint_SalesPointKey` ASC),
  CONSTRAINT `fk_Employee_SalesPoint1`
    FOREIGN KEY (`SalesPoint_SalesPointKey`)
    REFERENCES `pear`.`SalesPoint` (`SalesPointKey`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`Answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`Answer` (
  `AnswerKey` INT NOT NULL AUTO_INCREMENT,
  `Body` VARCHAR(45) NOT NULL,
  `Question_QuestionKey` INT NOT NULL,
  `Employee_EmployeeKey` INT NOT NULL,
  PRIMARY KEY (`AnswerKey`),
  INDEX `fk_Answer_Question1_idx` (`Question_QuestionKey` ASC),
  INDEX `fk_Answer_Employee1_idx` (`Employee_EmployeeKey` ASC),
  CONSTRAINT `fk_Answer_Question1`
    FOREIGN KEY (`Question_QuestionKey`)
    REFERENCES `pear`.`Question` (`QuestionKey`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Answer_Employee1`
    FOREIGN KEY (`Employee_EmployeeKey`)
    REFERENCES `pear`.`Employee` (`EmployeeKey`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`Order` (
  `OrderKey` INT NOT NULL AUTO_INCREMENT,
  `OrderTime` DATETIME NOT NULL,
  `DeliveryDate` DATETIME NULL,
  `DeliveryCost` DECIMAL(10,2) UNSIGNED NOT NULL,
  `OrderStatus` ENUM('pending', 'waiting', 'done', 'cancelled', 'refunded') NOT NULL,
  `SalesPoint_SalesPointKey` INT NULL,
  `Customer_CustomerKey` INT NULL,
  PRIMARY KEY (`OrderKey`),
  INDEX `fk_Order_SalesPoint1_idx` (`SalesPoint_SalesPointKey` ASC),
  INDEX `fk_Order_Customer1_idx` (`Customer_CustomerKey` ASC),
  CONSTRAINT `fk_Order_SalesPoint1`
    FOREIGN KEY (`SalesPoint_SalesPointKey`)
    REFERENCES `pear`.`SalesPoint` (`SalesPointKey`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Order_Customer1`
    FOREIGN KEY (`Customer_CustomerKey`)
    REFERENCES `pear`.`Customer` (`CustomerKey`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pear`.`OrderDetail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pear`.`OrderDetail` (
  `OrderDetailKey` BIGINT NOT NULL AUTO_INCREMENT,
  `Quantity` SMALLINT UNSIGNED NOT NULL DEFAULT 1,
  `TransactionPrice` DECIMAL(10,2) UNSIGNED NOT NULL,
  `DiscountPercentage` TINYINT UNSIGNED NULL,
  `Order_OrderKey` INT NOT NULL,
  `Product_ProductKey` INT NULL,
  PRIMARY KEY (`OrderDetailKey`, `Order_OrderKey`),
  INDEX `fk_OrderDetail_Order1_idx` (`Order_OrderKey` ASC),
  INDEX `fk_OrderDetail_Product1_idx` (`Product_ProductKey` ASC),
  CONSTRAINT `fk_OrderDetail_Order1`
    FOREIGN KEY (`Order_OrderKey`)
    REFERENCES `pear`.`Order` (`OrderKey`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_OrderDetail_Product1`
    FOREIGN KEY (`Product_ProductKey`)
    REFERENCES `pear`.`Product` (`ProductKey`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `pear` ;

-- -----------------------------------------------------
-- procedure PProductAdd
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PProductAdd(
    IN p_Code VARCHAR(45),
    IN p_Name VARCHAR(45),
    IN p_Price DECIMAL(10,2) UNSIGNED,
    IN p_Category ENUM('phone', 'laptop', 'watch')
)
BEGIN
    INSERT INTO Product (Code, Name, Price, Status, Category)
    VALUES (p_Code, p_Name, p_Price, 'planned', p_Category);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PProductArchive
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PProductArchive(
    IN p_ProductKey INT
)
BEGIN
    UPDATE Product
    SET Status = 'archived'
    WHERE ProductKey = p_ProductKey AND Status != 'archived';
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PQuestionAnswer
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PQuestionAnswer(
    IN p_Body VARCHAR(45),
    IN p_QuestionKey INT,
    IN p_EmployeeKey INT
)
BEGIN
    INSERT INTO Answer (Body, Question_QuestionKey, Employee_EmployeeKey)
    VALUES (p_Body, p_QuestionKey, p_EmployeeKey);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PQuestionAsk
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PQuestionAsk(
    IN p_Title VARCHAR(45),
    IN p_Body VARCHAR(45),
    IN p_CustomerKey INT,
    IN p_ProductKey INT
)
BEGIN
    INSERT INTO Question (Title, Body, Customer_CustomerKey, Product_ProductKey)
    VALUES (p_Title, p_Body, p_CustomerKey, p_ProductKey);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PCustomerRegister
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PCustomerRegister(
    IN p_Email VARCHAR(45),
    IN p_Password VARCHAR(45),
    IN p_FirstName VARCHAR(45),
    IN p_LastName VARCHAR(45),
    IN p_PhoneNumber VARCHAR(45),
    IN p_Birthday DATE,
    IN p_Address VARCHAR(45),
    IN p_CountryKey SMALLINT
)
BEGIN
    INSERT INTO Customer (Email, Password, FirstName, LastName, PhoneNumber, Birthday, Address, CreationDate, Country_CountryKey)
    VALUES (p_Email, p_Password, p_FirstName, p_LastName, p_PhoneNumber, p_Birthday, p_Address, CURDATE(), p_CountryKey);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PProductUpdate
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PProductUpdate(
    IN p_ProductKey INT,
    IN p_NewPrice DECIMAL(10,2) UNSIGNED,
    IN p_NewStatus ENUM('live', 'out_of_stock', 'planned', 'archived')
)
BEGIN
    UPDATE Product
    SET Price = p_NewPrice
    WHERE ProductKey = p_ProductKey;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure POrdersGetByCustomer
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE POrdersGetByCustomer(
    IN p_CustomerKey INT
)
BEGIN
    SELECT o.OrderKey, o.OrderTime, o.DeliveryDate, o.DeliveryCost, o.OrderStatus
    FROM `Order` o
    JOIN Question q ON o.OrderKey = q.QuestionKey
    WHERE q.Customer_CustomerKey = p_CustomerKey;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure POrderAdd
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE POrderAdd(
    IN p_OrderTime DATETIME,
    IN p_DeliveryDate DATETIME,
    IN p_DeliveryCost DECIMAL UNSIGNED,
    IN p_OrderStatus ENUM('pending', 'waiting', 'done', 'cancelled', 'refunded'),
    IN p_SalesPointKey INT
)
BEGIN
    INSERT INTO `Order` (OrderTime, DeliveryDate, DeliveryCost, OrderStatus, SalesPoint_SalesPointKey)
    VALUES (p_OrderTime, p_DeliveryDate, p_DeliveryCost, p_OrderStatus, p_SalesPointKey);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PProductGetAll
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PProductGetAll()
BEGIN
    SELECT * FROM Product;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PCustomerDelete
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PCustomerDelete(
    IN p_CustomerKey INT
)
BEGIN
    DELETE FROM Customer
    WHERE CustomerKey = p_CustomerKey;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PEmployeeAdd
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE PEmployeeAdd(
    IN p_FirstName VARCHAR(45),
    IN p_LastName VARCHAR(45),
    IN p_Email VARCHAR(45),
    IN p_PhoneNumber VARCHAR(45),
    IN p_SalesPointKey INT
)
BEGIN
    INSERT INTO Employee (FirstName, LastName, Email, PhoneNumber, SalesPoint_SalesPointKey)
    VALUES (p_FirstName, p_LastName, p_Email, p_PhoneNumber, p_SalesPointKey);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PProductGetAviable
-- -----------------------------------------------------

DELIMITER $$
USE `pear`$$
CREATE PROCEDURE `PProductGetAviable`()
BEGIN
    SELECT *
    FROM Product
    WHERE Status IN ('live', 'out_of_stock');
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
